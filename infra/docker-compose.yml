version: "3"

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    container_name: ${DB_CONTAINER_NAME}
    volumes:
      - ./src/back/:/go/src/app
      - ./stockoverflow-db:/var/lib/postgresql/data
      # copy the sql script to create database


  admin:
    container_name: ${PGADMIN_CONTAINER_NAME}
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    container_name: ${PGADMIN_CONTAINER_NAME}

  front:
    build:
      context: ./../front
      dockerfile: Dockerfile
      args:
        - HTTP_PORT=${FRONT_HTTP_PORT}
    volumes:
      - ./../front:/usr/src/nuxt-app
      - ./../front/node_modules:/usr/src/nuxt-app/node_modules
    ports:
      - "${FRONT_HTTP_PORT}:${FRONT_HTTP_PORT}"
    container_name: ${FRONT_CONTAINER_NAME}
    stdin_open: true
    tty: true

  back:
    build:
      context: ./src/back
      dockerfile: Dockerfile
      args:
        - HTTP_PORT=${BACK_HTTP_PORT}
    container_name: ${BACK_CONTAINER_NAME}
    depends_on:
      - db
    volumes:
      - ./src/back:/go/src/app
    ports:
      - "${BACK_HTTP_PORT}:${BACK_HTTP_PORT}"
    stdin_open: true
    tty: true
    environment:
      DATABASE_URL: postgres://postgres:postgres@db/postgres
      HTTP_ADDR: 0.0.0.0
